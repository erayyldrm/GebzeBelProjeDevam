import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["blocks", "extra", "data"],
  _excluded2 = ["name"],
  _excluded3 = ["name"],
  _excluded4 = ["children", "className"];
import { cloneElement, forwardRef, isValidElement, useState } from 'react';
import { Render, Provider, Container, useStore } from 'react-login-page';
import { Email } from './control/login/Email';
import { Password } from './control/login/Password';
import { Submit } from './control/login/Submit';
import { Footer } from './control/Footer';
import { Logo } from './control/Logo';
import { Title } from './control/Title';
import { InnerBox } from './control/InnerBox';
import { TitleLogin } from './control/TitleLogin';
import { TitleSignup } from './control/TitleSignup';
import { IconUser } from './icons/user';
import { IconArrow } from './icons/arrow';
import './index.css';
import { jsxs as _jsxs } from "react/jsx-runtime";
import { jsx as _jsx } from "react/jsx-runtime";
export * from 'react-login-page';
export * from './control/login/Email';
export * from './control/login/Password';
export * from './control/login/Submit';
export * from './control/InnerBox';
export * from './control/Title';
export * from './control/TitleLogin';
export * from './control/TitleSignup';
export * from './control/Logo';
export * from './control/Footer';
var RenderLogin = () => {
  var _useStore = useStore(),
    {
      blocks = {},
      extra = {},
      data
    } = _useStore,
    label = _objectWithoutPropertiesLoose(_useStore, _excluded);
  var {
    fields,
    buttons
  } = data || {
    fields: []
  };
  var [panel, setPanel] = useState('login');
  var loginButtons = buttons.filter(m => m.name.indexOf("$$login") > -1).sort((a, b) => a.index - b.index);
  var loginFields = fields.filter(m => m.name.indexOf("$$login") > -1).sort((a, b) => a.index - b.index);
  var signupButtons = buttons.filter(m => m.name.indexOf("$$signup") > -1).sort((a, b) => a.index - b.index);
  var signupFields = fields.filter(m => m.name.indexOf("$$signup") > -1).sort((a, b) => a.index - b.index);
  var switchButton = () => setPanel(panel === 'login' ? 'signup' : 'login');
  var loginarticle = blocks["$$loginarticle"];
  var loginArticleProps = (loginarticle == null ? void 0 : loginarticle.props) || {};
  var signuparticle = blocks["$$signuparticle"];
  var signupArticleProps = (signuparticle == null ? void 0 : signuparticle.props) || {};
  return /*#__PURE__*/_jsxs(Render, {
    children: [/*#__PURE__*/_jsxs("section", {
      className: "login-page10-toggle " + (panel === 'login' ? 'active-login' : 'active-signup'),
      children: [/*#__PURE__*/_jsxs("h6", {
        children: [blocks['title-login'], blocks['title-signup']]
      }), /*#__PURE__*/_jsx("label", {
        onClick: switchButton,
        children: IconArrow
      })]
    }), /*#__PURE__*/_jsxs("div", {
      className: "login-page10-inner",
      children: [(blocks.logo || blocks.title) && /*#__PURE__*/_jsxs("header", {
        children: [blocks.logo, blocks.title]
      }), /*#__PURE__*/_jsxs("main", {
        className: panel === 'login' ? 'active-login' : 'active-signup',
        children: [loginarticle && /*#__PURE__*/cloneElement(loginarticle, Object.assign(_extends({}, loginArticleProps, {
          className: panel === 'login' ? 'active' : ''
        })), /*#__PURE__*/_jsxs("section", {
          className: "login-page10-fields login-page10-login",
          children: [/*#__PURE__*/_jsx("h4", {
            children: blocks['title-login']
          }), loginFields.map((item, idx) => {
            var extraLabel = extra[item.name];
            if (!item.children && !extraLabel) return null;
            if (!item.children && extraLabel) return /*#__PURE__*/_jsx("div", {
              children: extraLabel
            }, idx);
            if (!item.children) return null;
            var htmlFor = item.name.replace('$$login', '');
            var _item$children$props = item.children.props,
              {
                name
              } = _item$children$props,
              props = _objectWithoutPropertiesLoose(_item$children$props, _excluded2);
            var labelElement = label[item.name];
            return /*#__PURE__*/_jsxs("label", {
              className: "rlp-" + item.name,
              htmlFor: htmlFor,
              children: [/*#__PURE__*/cloneElement(item.children, _extends({}, props, {
                name: panel === 'login' ? name : '',
                key: item.name + idx
              })), extraLabel && /*#__PURE__*/_jsx("div", {
                children: extraLabel
              }), labelElement && /*#__PURE__*/_jsx("span", {
                className: "login-page10-label",
                children: labelElement
              })]
            }, item.name + idx);
          }), /*#__PURE__*/_jsx("section", {
            className: "login-page10-button",
            children: loginButtons.map((item, idx) => {
              var child = item.children;
              if (! /*#__PURE__*/isValidElement(child)) return null;
              return /*#__PURE__*/cloneElement(child, _extends({}, child.props, {
                key: item.name + idx
              }));
            })
          }), blocks["$$loginfooter"]]
        })), signuparticle && /*#__PURE__*/cloneElement(signuparticle, Object.assign(_extends({}, signupArticleProps, {
          className: panel === 'signup' ? 'active' : ''
        })), /*#__PURE__*/_jsxs("section", {
          className: "login-page10-fields login-page10-signup",
          children: [/*#__PURE__*/_jsx("h4", {
            children: blocks['title-signup']
          }), signupFields.map((item, idx) => {
            var extraLabel = extra[item.name];
            if (!item.children && !extraLabel) return null;
            if (!item.children && extraLabel) return /*#__PURE__*/_jsx("div", {
              children: extraLabel
            }, idx);
            if (!item.children) return null;
            var htmlFor = item.name.replace('$$signup', '');
            var _item$children$props2 = item.children.props,
              {
                name
              } = _item$children$props2,
              props = _objectWithoutPropertiesLoose(_item$children$props2, _excluded3);
            var labelElement = label[item.name];
            return /*#__PURE__*/_jsxs("label", {
              htmlFor: htmlFor,
              children: [/*#__PURE__*/cloneElement(item.children, _extends({}, props, {
                name: panel === 'signup' ? name : '',
                key: item.name + idx
              })), extraLabel && /*#__PURE__*/_jsx("div", {
                children: extraLabel
              }), labelElement && /*#__PURE__*/_jsx("span", {
                className: "login-page10-label",
                children: labelElement
              })]
            }, item.name + idx);
          }), /*#__PURE__*/_jsx("section", {
            className: "login-page10-button",
            children: signupButtons.map((item, idx) => {
              var child = item.children;
              if (! /*#__PURE__*/isValidElement(child)) return null;
              return /*#__PURE__*/cloneElement(child, _extends({}, child.props, {
                key: item.name + idx
              }));
            })
          }), blocks["$$signupfooter"]]
        }))]
      })]
    })]
  });
};
var LoginPage = /*#__PURE__*/forwardRef((props, ref) => {
  var {
      children,
      className
    } = props,
    divProps = _objectWithoutPropertiesLoose(props, _excluded4);
  return /*#__PURE__*/_jsxs(Provider, {
    children: [/*#__PURE__*/_jsx(InnerBox, {}), /*#__PURE__*/_jsx(InnerBox, {
      panel: "signup"
    }), /*#__PURE__*/_jsx(TitleSignup, {}), /*#__PURE__*/_jsx(TitleLogin, {}), /*#__PURE__*/_jsx(Email, {}), /*#__PURE__*/_jsx(Password, {}), /*#__PURE__*/_jsx(Submit, {}), /*#__PURE__*/_jsx(Email, {
      panel: "signup",
      keyname: "e-mail"
    }), /*#__PURE__*/_jsx(Email, {
      panel: "signup",
      keyname: "name",
      placeholder: "Your Full Name",
      type: "text",
      children: IconUser
    }), /*#__PURE__*/_jsx(Password, {
      panel: "signup",
      placeholder: "Your Password",
      keyname: "password"
    }), /*#__PURE__*/_jsx(Submit, {
      panel: "signup",
      keyname: "signup-submit",
      children: "Signup"
    }), /*#__PURE__*/_jsxs(Container, _extends({}, divProps, {
      ref: ref,
      className: "login-page10 " + (className || ''),
      children: [/*#__PURE__*/_jsx(RenderLogin, {}), children]
    }))]
  });
});
var Login = LoginPage;
Login.Email = Email;
Login.Password = Password;
Login.Submit = Submit;
Login.Footer = Footer;
Login.Logo = Logo;
Login.InnerBox = InnerBox;
Login.Title = Title;
Login.TitleLogin = TitleLogin;
Login.TitleSignup = TitleSignup;
Login.displayName = 'LoginPage';
export default Login;