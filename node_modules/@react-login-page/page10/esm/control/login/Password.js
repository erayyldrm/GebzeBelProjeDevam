import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["keyname", "name", "visible", "rename", "label", "panel"];
import { useEffect, memo } from 'react';
import { Input, useStore } from 'react-login-page';
import { IconLock } from '../../icons/lock';
import { jsx as _jsx } from "react/jsx-runtime";
export var Password = /*#__PURE__*/memo(props => {
  var {
      keyname = 'password',
      name,
      visible = true,
      rename,
      label,
      panel = 'login'
    } = props,
    elmProps = _objectWithoutPropertiesLoose(props, _excluded);
  var {
    dispatch
  } = useStore();
  if (!elmProps.children && visible) {
    elmProps.children = IconLock;
  }
  var key = keyname || name;
  var nameBase = name || rename || keyname;
  useEffect(() => dispatch({
    ["$$" + panel + key]: label
  }), [label]);
  return /*#__PURE__*/_jsx(Input, _extends({
    type: "password",
    placeholder: "Your Password",
    autoComplete: "on",
    index: 1
  }, elmProps, {
    name: nameBase,
    visible: visible,
    keyname: "$$" + panel + key
  }));
});
Password.displayName = 'Login.Password';